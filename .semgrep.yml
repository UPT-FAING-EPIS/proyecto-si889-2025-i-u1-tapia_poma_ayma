rules:
  - id: detect-gemini
    languages:
      - dart
    severity: INFO
    message: "Possibly found usage of AI: Gemini"
    pattern-either:
      - pattern: import 'package:google_generative_ai';
      - pattern: final $MODEL = GenerativeModel(...);
    metadata:
      references:
        - https://semgrep.dev/blog/2024/detecting-shadow-ai
      category: maintainability
      technology:
        - genAI
        - LLMs
      confidence: LOW
      license: Semgrep Rules License v1.0. For more details, visit
        semgrep.dev/legal/rules-license
  
  - id: detect-firebase-vertex
    message: Semgrep detected Firebase Vertex AI usage. Ensure that Vertex AI is an
      approved LLM provider.
    severity: WARNING
    metadata:
      likelihood: LOW
      impact: HIGH
      confidence: HIGH
      category: security
      subcategory:
        - vuln
      cwe:
        - "CWE-497: Exposure of Sensitive System Information to an Unauthorized
          Control Sphere"
      display-name: detect Firebase Vertex AI usage
      functional-categories:
        - ai::sink::llm_call::firebase
        - ai::source::llm_client::firebase
      owasp:
        - A01:2021 - Broken Access Control
      references:
        - https://owasp.org/Top10/A01_2021-Broken_Access_Control
        - https://pub.dev/packages/firebase_vertexai
      release: alpha
      technology:
        - dart
        - firebase
        - genAI
        - google
        - llms
        - vertex
      license: Semgrep Rules License v1.0. For more details, visit
        semgrep.dev/legal/rules-license
      vulnerability_class:
        - Improper Authorization
    languages:
      - dart
    mode: taint
    pattern-sources:
      - patterns:
          - pattern-inside: |
              import 'package:firebase_vertexai/firebase_vertexai.dart';
              ...
          - pattern-either:
              - pattern: FirebaseVertexAI.instance.generativeModel(...)
              - pattern: FirebaseVertexAI.instance.generativeModel.withConfig(...)
    pattern-sinks:
      - patterns:
          - pattern-inside: |
              import 'package:firebase_vertexai/firebase_vertexai.dart';
              ...
          - pattern-either:
              - pattern: $MODEL.generateContent(...)
              - pattern: $MODEL.generateContentStream(...)
              - pattern: $MODEL.countTokens(...)
              - pattern: $MODEL.embedContent(...)
              - pattern: $MODEL.batchEmbedContents(...)
              - pattern: $CHAT.sendMessage(...)
              - pattern: $CHAT.sendMessageStream(...)

